{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_ref","data","a","createElement","allMarkdownRemark","edges","map","_ref2","index","node","key","to","fields","slug","frontmatter","title","style","color","date","excerpt","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","components_menu","react_default","className","gatsby_browser_entry","components_sidebar","tags","categories","forEach","Array","from","Set","concat","category","toLowerCase","tag","site","siteMetadata","topics","_3533537880"],"mappings":"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","file":"component---src-pages-index-js-d7d4cb721fa830ad2333.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { graphql, Link } from \"gatsby\";\r\n\r\nexport default ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <h1>Bài viết mới nhất</h1>\r\n      \r\n      {data.allMarkdownRemark.edges.map(({ node }, index) =>\r\n        <div key={index}>\r\n          <h3>\r\n\t\t  <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n\t\t  <span style={{color: `#BBB`}}>— {node.frontmatter.date}</span>\r\n\t\t  </h3>\r\n          <p>{node.excerpt}</p>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n        sort: {order: DESC, fields: [frontmatter___date] }\r\n        limit: 1000\r\n      ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD/MM/YYYY\")\r\n          }\r\n          excerpt\r\n\t\t  fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default (props) => {\r\n  const { title } = props;\r\n\r\n  return (\r\n    <header>\r\n      <h3 className=\"nav-brand\"><Link to={`/`}>{ title }</Link></h3>\r\n      <ul>\r\n        <li className=\"nav-item\"><Link to={`/lien-he/`}>Liên hệ</Link></li>\r\n        <li className=\"nav-item\"><Link to={`/gioi-thieu/`}>Giới thiệu</Link></li>\r\n        <li className=\"nav-item\"><Link to={`/`}>Trang chủ</Link></li>\r\n      </ul>\r\n    </header>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport slug from \"slug\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default (props) => {\r\n  const { edges } = props;\r\n  let tags = [];\r\n  let categories = [];\r\n\r\n  edges.forEach(({ node }) => {\r\n    tags = Array.from(new Set([...tags, ...node.frontmatter.tags]));\r\n    categories = Array.from(new Set([...categories, ...node.frontmatter.categories]));\r\n  });\r\n\r\n  return (\r\n    <aside>\r\n      <div>\r\n        <h3>Chuyên mục</h3>\r\n        {\r\n          categories.map((category, index) => (\r\n            <p key={index}>\r\n              <Link to={`/category/${slug(category).toLowerCase()}/`}>{category}</Link>\r\n            </p>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Thẻ</h3>\r\n        {\r\n          tags.map((tag, index) => (\r\n            <span key={index}>\r\n              <Link to={`/tag/${slug(tag).toLowerCase()}/`}>{tag}</Link>{\" \"}\r\n            </span>\r\n          ))\r\n        }\r\n      </div>\r\n    </aside>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./layout.css\";\r\nimport Menu from \"./menu\";\r\nimport Sidebar from \"./sidebar\";\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n\t\t\tsite {\r\n\t\t\t\tsiteMetadata {\r\n\t\t\t\t  title\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttopics: allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date] }) {\r\n\t\t\t  edges {\r\n\t\t\t\tnode {\r\n\t\t\t\t  frontmatter {\r\n\t\t\t\t\tcategories\r\n\t\t\t\t\ttags\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t}\r\n    `}\t  \r\n      render={data => (\r\n        <div className=\"app\">\r\n          <Menu title={data.site.siteMetadata.title} />\r\n          <div className=\"main\">\r\n            <div className=\"content\">{children}</div>\r\n            <div className=\"sidebar\">\r\n\t\t\t\t<Sidebar \r\n\t\t\t\t\tedges={data.topics.edges}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    />\r\n  )\r\n}"],"sourceRoot":""}