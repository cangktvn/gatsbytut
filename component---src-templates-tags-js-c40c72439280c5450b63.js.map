{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","_ref","data","tag","pageContext","tagEdges","allMarkdownRemark","edges","filter","_ref2","node","frontmatter","tags","includes","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","map","_ref3","index","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","title","style","color","date","excerpt","query","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","components_menu","react_default","className","gatsby_browser_entry","components_sidebar","categories","forEach","Array","from","Set","concat","category","toLowerCase","site","siteMetadata","topics","_3533537880"],"mappings":"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","file":"component---src-templates-tags-js-c40c72439280c5450b63.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { graphql, Link } from \"gatsby\";\r\n\r\nexport default ({ data, pageContext }) => {\r\n  const { tag } = pageContext;\r\n  const tagEdges = data.allMarkdownRemark.edges.filter(({node}) => node.frontmatter.tags.includes(tag));\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>Thẻ {tag}</h1>\r\n\r\n      {tagEdges.map(({ node }, index) => \r\n        <div key={index}>\r\n          <h3>\r\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n            <span style={{ color: `#BBB` }}>— {node.frontmatter.date}</span>\r\n          </h3>\r\n          <p>{node.excerpt}</p>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n        sort: {order: DESC, fields: [frontmatter___date] }\r\n        limit: 1000\r\n      ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD/MM/YYYY\")\r\n            tags\r\n          }\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default (props) => {\r\n  const { title } = props;\r\n\r\n  return (\r\n    <header>\r\n      <h3 className=\"nav-brand\"><Link to={`/`}>{ title }</Link></h3>\r\n      <ul>\r\n        <li className=\"nav-item\"><Link to={`/lien-he/`}>Liên hệ</Link></li>\r\n        <li className=\"nav-item\"><Link to={`/gioi-thieu/`}>Giới thiệu</Link></li>\r\n        <li className=\"nav-item\"><Link to={`/`}>Trang chủ</Link></li>\r\n      </ul>\r\n    </header>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport slug from \"slug\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default (props) => {\r\n  const { edges } = props;\r\n  let tags = [];\r\n  let categories = [];\r\n\r\n  edges.forEach(({ node }) => {\r\n    tags = Array.from(new Set([...tags, ...node.frontmatter.tags]));\r\n    categories = Array.from(new Set([...categories, ...node.frontmatter.categories]));\r\n  });\r\n\r\n  return (\r\n    <aside>\r\n      <div>\r\n        <h3>Chuyên mục</h3>\r\n        {\r\n          categories.map((category, index) => (\r\n            <p key={index}>\r\n              <Link to={`/category/${slug(category).toLowerCase()}/`}>{category}</Link>\r\n            </p>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Thẻ</h3>\r\n        {\r\n          tags.map((tag, index) => (\r\n            <span key={index}>\r\n              <Link to={`/tag/${slug(tag).toLowerCase()}/`}>{tag}</Link>{\" \"}\r\n            </span>\r\n          ))\r\n        }\r\n      </div>\r\n    </aside>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./layout.css\";\r\nimport Menu from \"./menu\";\r\nimport Sidebar from \"./sidebar\";\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n\t\t\tsite {\r\n\t\t\t\tsiteMetadata {\r\n\t\t\t\t  title\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttopics: allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date] }) {\r\n\t\t\t  edges {\r\n\t\t\t\tnode {\r\n\t\t\t\t  frontmatter {\r\n\t\t\t\t\tcategories\r\n\t\t\t\t\ttags\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t}\r\n    `}\t  \r\n      render={data => (\r\n        <div className=\"app\">\r\n          <Menu title={data.site.siteMetadata.title} />\r\n          <div className=\"main\">\r\n            <div className=\"content\">{children}</div>\r\n            <div className=\"sidebar\">\r\n\t\t\t\t<Sidebar \r\n\t\t\t\t\tedges={data.topics.edges}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    />\r\n  )\r\n}"],"sourceRoot":""}